{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Slither",
          "informationUri": "https://github.com/crytic/slither",
          "version": "0.11.3",
          "rules": [
            {
              "id": "1-1-divide-before-multiply",
              "name": "divide-before-multiply",
              "properties": {
                "precision": "high",
                "security-severity": "4.0"
              },
              "shortDescription": {
                "text": "Divide before multiply"
              },
              "help": {
                "text": "Consider ordering multiplication before division."
              }
            },
            {
              "id": "1-1-uninitialized-local",
              "name": "uninitialized-local",
              "properties": {
                "precision": "high",
                "security-severity": "4.0"
              },
              "shortDescription": {
                "text": "Uninitialized local variables"
              },
              "help": {
                "text": "Initialize all the variables. If a variable is meant to be initialized to zero, explicitly set it to zero to improve code readability."
              }
            },
            {
              "id": "2-0-shadowing-local",
              "name": "shadowing-local",
              "properties": {
                "precision": "very-high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Local variable shadowing"
              },
              "help": {
                "text": "Rename the local variables that shadow another component."
              }
            },
            {
              "id": "2-1-missing-zero-check",
              "name": "missing-zero-check",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Missing zero address validation"
              },
              "help": {
                "text": "Check that the address is not zero."
              }
            },
            {
              "id": "2-1-calls-loop",
              "name": "calls-loop",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Calls inside a loop"
              },
              "help": {
                "text": "Favor [pull over push](https://github.com/ethereum/wiki/wiki/Safety#favor-pull-over-push-for-external-calls) strategy for external calls."
              }
            },
            {
              "id": "2-1-timestamp",
              "name": "timestamp",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Block timestamp"
              },
              "help": {
                "text": "Avoid relying on `block.timestamp`."
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "1-1-uninitialized-local",
          "message": {
            "text": "IssuanceControllerV3.mintClaimsForWindow(address[]).totalTokens (contracts/IssuanceControllerV3.sol#466) is a local variable never initialized\n",
            "markdown": "[IssuanceControllerV3.mintClaimsForWindow(address[]).totalTokens](contracts/IssuanceControllerV3.sol#L466) is a local variable never initialized\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 466,
                  "endLine": 466
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "097a2595a6471a0706e8062b3abc0c1df47ca488ede3e4eb9d05af10eb2628aa"
          }
        },
        {
          "ruleId": "1-1-uninitialized-local",
          "message": {
            "text": "IssuanceControllerV3.mintClaimsForWindow(address[]).count (contracts/IssuanceControllerV3.sol#467) is a local variable never initialized\n",
            "markdown": "[IssuanceControllerV3.mintClaimsForWindow(address[]).count](contracts/IssuanceControllerV3.sol#L467) is a local variable never initialized\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 467,
                  "endLine": 467
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2ada73629f3d36d08cbc8e661b2aa2fe9ff230235c5340cd23512683731910cb"
          }
        },
        {
          "ruleId": "1-1-uninitialized-local",
          "message": {
            "text": "NAVOracleV3.setNAV(uint256,uint256,uint256,bytes[]).valid (contracts/NAVOracleV3.sol#263) is a local variable never initialized\n",
            "markdown": "[NAVOracleV3.setNAV(uint256,uint256,uint256,bytes[]).valid](contracts/NAVOracleV3.sol#L263) is a local variable never initialized\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/NAVOracleV3.sol"
                },
                "region": {
                  "startLine": 263,
                  "endLine": 263
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "55f136b1db39a837d3ad9464ae481bc73c436a00e11dbd08ddfc7f93a8c63bcc"
          }
        },
        {
          "ruleId": "2-0-shadowing-local",
          "message": {
            "text": "IssuanceControllerV3._calculateEffectiveCapacity(bytes32,uint256).canIssue (contracts/IssuanceControllerV3.sol#635) shadows:\n\t- IssuanceControllerV3.canIssue(uint256,uint256,uint256,bytes32) (contracts/IssuanceControllerV3.sol#669-705) (function)\n",
            "markdown": "[IssuanceControllerV3._calculateEffectiveCapacity(bytes32,uint256).canIssue](contracts/IssuanceControllerV3.sol#L635) shadows:\n\t- [IssuanceControllerV3.canIssue(uint256,uint256,uint256,bytes32)](contracts/IssuanceControllerV3.sol#L669-L705) (function)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 635,
                  "endLine": 635
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "aae99ddd7bb80677f2a84008aea1413a38fbcd33e227fa0bfecb2734027a6a75"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "TrancheManagerV2.constructor(address,address,address).config_ (contracts/TrancheManagerV2.sol#70) lacks a zero-check on :\n\t\t- config = config_ (contracts/TrancheManagerV2.sol#74)\n",
            "markdown": "[TrancheManagerV2.constructor(address,address,address).config_](contracts/TrancheManagerV2.sol#L70) lacks a zero-check on :\n\t\t- [config = config_](contracts/TrancheManagerV2.sol#L74)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/TrancheManagerV2.sol"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3eaeceb361e35f14f7d10942c40f1d7380d152169dc24f515b10874449ce4975"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "MemberRegistry.setRegistrar(address).r (contracts/MemberRegistry.sol#26) lacks a zero-check on :\n\t\t- registrar = r (contracts/MemberRegistry.sol#27)\n",
            "markdown": "[MemberRegistry.setRegistrar(address).r](contracts/MemberRegistry.sol#L26) lacks a zero-check on :\n\t\t- [registrar = r](contracts/MemberRegistry.sol#L27)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/MemberRegistry.sol"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5fba7b002cbff85ba2c790681d608f7c28ec634730bed3a697193b0748e58a8e"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "MalRedemptionClaim.setReentrantTarget(address,bytes)._target (contracts/malicious/MalRedemptionClaim.sol#30) lacks a zero-check on :\n\t\t- targetContract = _target (contracts/malicious/MalRedemptionClaim.sol#31)\n",
            "markdown": "[MalRedemptionClaim.setReentrantTarget(address,bytes)._target](contracts/malicious/MalRedemptionClaim.sol#L30) lacks a zero-check on :\n\t\t- [targetContract = _target](contracts/malicious/MalRedemptionClaim.sol#L31)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/malicious/MalRedemptionClaim.sol"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "75bf150546ce9c6b6a0464183c78cba1171b78a124ec79315f416166fd2146e9"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "TrancheManagerV2.constructor(address,address,address).oracle_ (contracts/TrancheManagerV2.sol#70) lacks a zero-check on :\n\t\t- oracle = oracle_ (contracts/TrancheManagerV2.sol#73)\n",
            "markdown": "[TrancheManagerV2.constructor(address,address,address).oracle_](contracts/TrancheManagerV2.sol#L70) lacks a zero-check on :\n\t\t- [oracle = oracle_](contracts/TrancheManagerV2.sol#L73)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/TrancheManagerV2.sol"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cbb341abeb320632d6f8b47fc7397683a538354996de44b2ee6d1f59145b3e53"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "MalUSDC.setReentrantTarget(address,bytes)._target (contracts/malicious/MalUSDC.sol#21) lacks a zero-check on :\n\t\t- targetContract = _target (contracts/malicious/MalUSDC.sol#22)\n",
            "markdown": "[MalUSDC.setReentrantTarget(address,bytes)._target](contracts/malicious/MalUSDC.sol#L21) lacks a zero-check on :\n\t\t- [targetContract = _target](contracts/malicious/MalUSDC.sol#L22)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/malicious/MalUSDC.sol"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d73e371c783efeb6585fa479b57d5f0fa30d7040925b8a2f31adf4395b2e348a"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "IssuanceControllerV3._mintClaimForUser(address,uint256,uint256) (contracts/IssuanceControllerV3.sol#611-615) has external calls inside a loop: claimId = claims.mintClaim(to,0,amount) (contracts/IssuanceControllerV3.sol#612)\n\tCalls stack containing the loop:\n\t\tIssuanceControllerV3.mintClaimsForWindow(address[])\n",
            "markdown": "[IssuanceControllerV3._mintClaimForUser(address,uint256,uint256)](contracts/IssuanceControllerV3.sol#L611-L615) has external calls inside a loop: [claimId = claims.mintClaim(to,0,amount)](contracts/IssuanceControllerV3.sol#L612)\n\tCalls stack containing the loop:\n\t\tIssuanceControllerV3.mintClaimsForWindow(address[])\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 611,
                  "endLine": 615
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fee1800477d93a4abffe2365b1eb62842b3f8c955c7ccf2720cb93caa84d6064"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "TrancheManagerV2.raiseBRICSDetachment(uint16,uint16) (contracts/TrancheManagerV2.sol#132-154) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp - lastDetachmentUpdateTs < DETACHMENT_COOLDOWN (contracts/TrancheManagerV2.sol#143)\n\t- last + ORACLE_STALE_TOL < block.timestamp (contracts/TrancheManagerV2.sol#146)\n",
            "markdown": "[TrancheManagerV2.raiseBRICSDetachment(uint16,uint16)](contracts/TrancheManagerV2.sol#L132-L154) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [block.timestamp - lastDetachmentUpdateTs < DETACHMENT_COOLDOWN](contracts/TrancheManagerV2.sol#L143)\n\t- [last + ORACLE_STALE_TOL < block.timestamp](contracts/TrancheManagerV2.sol#L146)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/TrancheManagerV2.sol"
                },
                "region": {
                  "startLine": 132,
                  "endLine": 154
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "048daa24b98af1368372f2b4780c269d7e0ba642955fcd4f07d0becc050c2abb"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "NAVOracleV3.navRay() (contracts/NAVOracleV3.sol#103-109) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- degradationMode || _isStale() (contracts/NAVOracleV3.sol#104)\n\t- d <= 0 (contracts/NAVOracleV3.sol#106)\n",
            "markdown": "[NAVOracleV3.navRay()](contracts/NAVOracleV3.sol#L103-L109) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [degradationMode || _isStale()](contracts/NAVOracleV3.sol#L104)\n\t- [d <= 0](contracts/NAVOracleV3.sol#L106)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/NAVOracleV3.sol"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 109
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "15c2baf6052d7d89f94c7e9840553c5e32d27547deef2221b5e7c3be44b54d09"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "TrancheManagerV2.getEffectiveDetachment() (contracts/TrancheManagerV2.sol#112-130) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- level == 3 && expansionTier == 2 && tier2Expiry != 0 && block.timestamp <= tier2Expiry (contracts/TrancheManagerV2.sol#116-119)\n\t- softCapExpiry != 0 && block.timestamp <= softCapExpiry (contracts/TrancheManagerV2.sol#125)\n",
            "markdown": "[TrancheManagerV2.getEffectiveDetachment()](contracts/TrancheManagerV2.sol#L112-L130) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [level == 3 && expansionTier == 2 && tier2Expiry != 0 && block.timestamp <= tier2Expiry](contracts/TrancheManagerV2.sol#L116-L119)\n\t- [softCapExpiry != 0 && block.timestamp <= softCapExpiry](contracts/TrancheManagerV2.sol#L125)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/TrancheManagerV2.sol"
                },
                "region": {
                  "startLine": 112,
                  "endLine": 130
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1a135e98f52311b6d05475ede3610975a1800c63226a7d297b5850e7db07317d"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "IssuanceControllerV3.extendRatificationDeadline() (contracts/IssuanceControllerV3.sol#970-980) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(timeElapsed >= RATIFY_DEADLINE && timeElapsed < RATIFY_DEADLINE + 86400,wrong timing) (contracts/IssuanceControllerV3.sol#976)\n",
            "markdown": "[IssuanceControllerV3.extendRatificationDeadline()](contracts/IssuanceControllerV3.sol#L970-L980) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(timeElapsed >= RATIFY_DEADLINE && timeElapsed < RATIFY_DEADLINE + 86400,wrong timing)](contracts/IssuanceControllerV3.sol#L976)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 970,
                  "endLine": 980
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "26906a6fb9fb946944d6fcff6e92368e0dd718b98bb1986288ee4d30151a41fe"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "ClaimRegistry.getClaim(uint256) (contracts/ClaimRegistry.sol#215-218) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- ! claims[claimId].isActive && ! claims[claimId].isSettled (contracts/ClaimRegistry.sol#216)\n",
            "markdown": "[ClaimRegistry.getClaim(uint256)](contracts/ClaimRegistry.sol#L215-L218) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [! claims[claimId].isActive && ! claims[claimId].isSettled](contracts/ClaimRegistry.sol#L216)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ClaimRegistry.sol"
                },
                "region": {
                  "startLine": 215,
                  "endLine": 218
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "32ab204e1378b133b03b7ecdf76d8119669c028194ae2e13ee02da187c7bacfa"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "NAVOracleV3.emergencySetNAV(uint256,uint256,bytes) (contracts/NAVOracleV3.sol#284-301) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(degradationMode || _isStale(),not in degradation) (contracts/NAVOracleV3.sol#285)\n",
            "markdown": "[NAVOracleV3.emergencySetNAV(uint256,uint256,bytes)](contracts/NAVOracleV3.sol#L284-L301) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(degradationMode || _isStale(),not in degradation)](contracts/NAVOracleV3.sol#L285)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/NAVOracleV3.sol"
                },
                "region": {
                  "startLine": 284,
                  "endLine": 301
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "33d4645170ae44054610cdbb2660e3f4ae5f8dc95ee49b09c253931aebaf02f4"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "IssuanceControllerV3.maybeRevertDetachment() (contracts/IssuanceControllerV3.sol#982-993) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp > deadline (contracts/IssuanceControllerV3.sol#990)\n",
            "markdown": "[IssuanceControllerV3.maybeRevertDetachment()](contracts/IssuanceControllerV3.sol#L982-L993) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [block.timestamp > deadline](contracts/IssuanceControllerV3.sol#L990)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 982,
                  "endLine": 993
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3b6bde2007e47ffe6ab90e9761ac65a7c215c0102e4f3efbd894447b143a217c"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "NAVOracleV3._isStale() (contracts/NAVOracleV3.sol#217-219) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp > _lastTs + staleThreshold (contracts/NAVOracleV3.sol#218)\n",
            "markdown": "[NAVOracleV3._isStale()](contracts/NAVOracleV3.sol#L217-L219) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [block.timestamp > _lastTs + staleThreshold](contracts/NAVOracleV3.sol#L218)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/NAVOracleV3.sol"
                },
                "region": {
                  "startLine": 217,
                  "endLine": 219
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4983173358e99a95294ea9f75bd82dc64ec2b08c2c75efe7095b2332a4453709"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "NAVOracleV3._haircut(uint256) (contracts/NAVOracleV3.sol#240-247) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- age >= t3After (contracts/NAVOracleV3.sol#242-245)\n\t- age >= t2After (contracts/NAVOracleV3.sol#242-245)\n\t- age >= t1After (contracts/NAVOracleV3.sol#242-245)\n",
            "markdown": "[NAVOracleV3._haircut(uint256)](contracts/NAVOracleV3.sol#L240-L247) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [age >= t3After](contracts/NAVOracleV3.sol#L242-L245)\n\t- [age >= t2After](contracts/NAVOracleV3.sol#L242-L245)\n\t- [age >= t1After](contracts/NAVOracleV3.sol#L242-L245)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/NAVOracleV3.sol"
                },
                "region": {
                  "startLine": 240,
                  "endLine": 247
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4f7951294d1ad958e0559ad54ce7ab9d671ceff55b81628c254097fd17c8e304"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "MezzanineVault.withdraw(uint256,address,address) (contracts/MezzanineVault.sol#51-54) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp > reinvestUntil || ! principalLocked,reinvest lock) (contracts/MezzanineVault.sol#52)\n",
            "markdown": "[MezzanineVault.withdraw(uint256,address,address)](contracts/MezzanineVault.sol#L51-L54) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(block.timestamp > reinvestUntil || ! principalLocked,reinvest lock)](contracts/MezzanineVault.sol#L52)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/MezzanineVault.sol"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 54
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "565ca36b57599d3f0a1bc2d4789ce34a92ed0e3fc56fd3770b5caf120883b3b4"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "IssuanceControllerV3.mintForSigned(address,uint256,uint256,uint256,bytes32,uint256,bytes) (contracts/IssuanceControllerV3.sol#708-801) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp > deadline (contracts/IssuanceControllerV3.sol#724)\n\t- lastIssueDay[msg.sender] != today (contracts/IssuanceControllerV3.sol#777)\n",
            "markdown": "[IssuanceControllerV3.mintForSigned(address,uint256,uint256,uint256,bytes32,uint256,bytes)](contracts/IssuanceControllerV3.sol#L708-L801) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [block.timestamp > deadline](contracts/IssuanceControllerV3.sol#L724)\n\t- [lastIssueDay[msg.sender] != today](contracts/IssuanceControllerV3.sol#L777)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 708,
                  "endLine": 801
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7539d4f3d65f8a2c4338dd43e64b3c47d833b928496d4c0c3bbcc84e763ba63e"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "IssuanceControllerV3.settleClaim(uint256,uint256,address) (contracts/IssuanceControllerV3.sol#515-568) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < w.strikeTs + SETTLEMENT_DELAY (contracts/IssuanceControllerV3.sol#520)\n",
            "markdown": "[IssuanceControllerV3.settleClaim(uint256,uint256,address)](contracts/IssuanceControllerV3.sol#L515-L568) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [block.timestamp < w.strikeTs + SETTLEMENT_DELAY](contracts/IssuanceControllerV3.sol#L520)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 515,
                  "endLine": 568
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7a87514a7babf4e06df9aff16fd6e954eb8ff160baef0bf6f2d5710f847a1d06"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "NAVOracleV3.getDegradationLevel() (contracts/NAVOracleV3.sol#117-131) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- timeSinceLastUpdate >= t3After (contracts/NAVOracleV3.sol#122)\n\t- timeSinceLastUpdate >= t2After (contracts/NAVOracleV3.sol#124)\n\t- timeSinceLastUpdate >= t1After (contracts/NAVOracleV3.sol#126)\n",
            "markdown": "[NAVOracleV3.getDegradationLevel()](contracts/NAVOracleV3.sol#L117-L131) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [timeSinceLastUpdate >= t3After](contracts/NAVOracleV3.sol#L122)\n\t- [timeSinceLastUpdate >= t2After](contracts/NAVOracleV3.sol#L124)\n\t- [timeSinceLastUpdate >= t1After](contracts/NAVOracleV3.sol#L126)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/NAVOracleV3.sol"
                },
                "region": {
                  "startLine": 117,
                  "endLine": 131
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7c6c7ace0d6bedc38b4856b59c39e13e1a1fe3ce33713e216165f5acb9331d62"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "IssuanceControllerV3.executeMintNonceReset() (contracts/IssuanceControllerV3.sol#938-945) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(recoveryRequests[msg.sender] > 0,No reset requested) (contracts/IssuanceControllerV3.sol#939)\n\t- require(bool,string)(block.timestamp >= recoveryRequests[msg.sender],Timelock not expired) (contracts/IssuanceControllerV3.sol#940)\n",
            "markdown": "[IssuanceControllerV3.executeMintNonceReset()](contracts/IssuanceControllerV3.sol#L938-L945) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(recoveryRequests[msg.sender] > 0,No reset requested)](contracts/IssuanceControllerV3.sol#L939)\n\t- [require(bool,string)(block.timestamp >= recoveryRequests[msg.sender],Timelock not expired)](contracts/IssuanceControllerV3.sol#L940)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 938,
                  "endLine": 945
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "84801a6edbdcacfe09188aabeaea2c3a60da6c6c3ab197da70308da9eb2ce8c7"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "TrancheManagerV2.enforceSoftCapExpiry(uint16) (contracts/TrancheManagerV2.sol#171-179) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- softCapExpiry == 0 (contracts/TrancheManagerV2.sol#172)\n\t- block.timestamp <= softCapExpiry (contracts/TrancheManagerV2.sol#173)\n",
            "markdown": "[TrancheManagerV2.enforceSoftCapExpiry(uint16)](contracts/TrancheManagerV2.sol#L171-L179) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [softCapExpiry == 0](contracts/TrancheManagerV2.sol#L172)\n\t- [block.timestamp <= softCapExpiry](contracts/TrancheManagerV2.sol#L173)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/TrancheManagerV2.sol"
                },
                "region": {
                  "startLine": 171,
                  "endLine": 179
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9ac1a5b50dfaeb246a47a5d765b2d2d43ff4659a0f5e2c2110763fd8d093c0e3"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "IssuanceControllerV3.requestRedeemOnBehalf(address,uint256) (contracts/IssuanceControllerV3.sol#404-457) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp - lastRedeemReq[user] < cooldown (contracts/IssuanceControllerV3.sol#412)\n",
            "markdown": "[IssuanceControllerV3.requestRedeemOnBehalf(address,uint256)](contracts/IssuanceControllerV3.sol#L404-L457) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [block.timestamp - lastRedeemReq[user] < cooldown](contracts/IssuanceControllerV3.sol#L412)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 404,
                  "endLine": 457
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9c5662507e87f1fe2ee26ec9267f7ba893e9c39ca730cf142a7cea7ca0c47f8e"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "RedemptionClaim.safeTransferFrom(address,address,uint256,uint256,bytes) (contracts/RedemptionClaim.sol#85-101) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp + effectiveFreezeSecs < c.strikeTs,claim frozen pre-strike) (contracts/RedemptionClaim.sol#99)\n",
            "markdown": "[RedemptionClaim.safeTransferFrom(address,address,uint256,uint256,bytes)](contracts/RedemptionClaim.sol#L85-L101) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(block.timestamp + effectiveFreezeSecs < c.strikeTs,claim frozen pre-strike)](contracts/RedemptionClaim.sol#L99)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/RedemptionClaim.sol"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 101
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9f4fc19f3d40fecc4c1d613dd9f6f3c1eae62dd2574a4008a3238fe364926910"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "NAVOracleV3._degradedBase() (contracts/NAVOracleV3.sol#222-237) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- base < floor_ (contracts/NAVOracleV3.sol#233)\n\t- base > ceil_ (contracts/NAVOracleV3.sol#234)\n",
            "markdown": "[NAVOracleV3._degradedBase()](contracts/NAVOracleV3.sol#L222-L237) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [base < floor_](contracts/NAVOracleV3.sol#L233)\n\t- [base > ceil_](contracts/NAVOracleV3.sol#L234)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/NAVOracleV3.sol"
                },
                "region": {
                  "startLine": 222,
                  "endLine": 237
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b4846d758c3370de1c5d180defaedd747271350462042416730f593cd0a8243c"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "PreTrancheBuffer.instantRedeem(address,uint256) (contracts/PreTrancheBuffer.sol#104-124) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- lastRedemptionDay[user] != today (contracts/PreTrancheBuffer.sol#115)\n",
            "markdown": "[PreTrancheBuffer.instantRedeem(address,uint256)](contracts/PreTrancheBuffer.sol#L104-L124) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [lastRedemptionDay[user] != today](contracts/PreTrancheBuffer.sol#L115)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/PreTrancheBuffer.sol"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 124
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b886201b71c3b26974ade4de5cdfc3010d352fcdd03ac82f76b281fd6b382df6"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "IssuanceControllerV3.closeNavWindow() (contracts/IssuanceControllerV3.sol#394-401) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < w.closeTs (contracts/IssuanceControllerV3.sol#397)\n",
            "markdown": "[IssuanceControllerV3.closeNavWindow()](contracts/IssuanceControllerV3.sol#L394-L401) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [block.timestamp < w.closeTs](contracts/IssuanceControllerV3.sol#L397)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 394,
                  "endLine": 401
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c7eb871c7240706b2700180cda415334f7e695a8b7221544cabac5f40114e8e7"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "IssuanceControllerV3.openNavWindow(uint256) (contracts/IssuanceControllerV3.sol#376-392) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- closeTs <= block.timestamp + 3600 || closeTs <= block.timestamp + windowMinDuration (contracts/IssuanceControllerV3.sol#378)\n",
            "markdown": "[IssuanceControllerV3.openNavWindow(uint256)](contracts/IssuanceControllerV3.sol#L376-L392) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [closeTs <= block.timestamp + 3600 || closeTs <= block.timestamp + windowMinDuration](contracts/IssuanceControllerV3.sol#L378)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 376,
                  "endLine": 392
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cd710c65c9308047b6c14ac817dcdc9147835392fd8fed848c8f898fafe06cb1"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "IssuanceControllerV3.mintFor(address,uint256,uint256,uint256,bytes32) (contracts/IssuanceControllerV3.sol#804-876) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- lastIssueDay[msg.sender] != today (contracts/IssuanceControllerV3.sol#852)\n",
            "markdown": "[IssuanceControllerV3.mintFor(address,uint256,uint256,uint256,bytes32)](contracts/IssuanceControllerV3.sol#L804-L876) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [lastIssueDay[msg.sender] != today](contracts/IssuanceControllerV3.sol#L852)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/IssuanceControllerV3.sol"
                },
                "region": {
                  "startLine": 804,
                  "endLine": 876
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ef93273894332536e5692ea0126d554a2f2a2edd0962f97bb39c97c671ccb550"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "PreTrancheBuffer.availableInstantCapacity(address) (contracts/PreTrancheBuffer.sol#79-94) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- lastRedemptionDay[user] != today (contracts/PreTrancheBuffer.sol#86)\n",
            "markdown": "[PreTrancheBuffer.availableInstantCapacity(address)](contracts/PreTrancheBuffer.sol#L79-L94) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [lastRedemptionDay[user] != today](contracts/PreTrancheBuffer.sol#L86)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/PreTrancheBuffer.sol"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 94
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f65306cbcec93087e83a41af877a24d4eca887372b4134baa923a95361e5b2d6"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "TrancheManagerV2.enforceTier2Expiry(uint16) (contracts/TrancheManagerV2.sol#213-223) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- tier2Expiry == 0 (contracts/TrancheManagerV2.sol#214)\n\t- block.timestamp <= tier2Expiry (contracts/TrancheManagerV2.sol#215)\n",
            "markdown": "[TrancheManagerV2.enforceTier2Expiry(uint16)](contracts/TrancheManagerV2.sol#L213-L223) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [tier2Expiry == 0](contracts/TrancheManagerV2.sol#L214)\n\t- [block.timestamp <= tier2Expiry](contracts/TrancheManagerV2.sol#L215)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/TrancheManagerV2.sol"
                },
                "region": {
                  "startLine": 213,
                  "endLine": 223
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fa244279a469772b6630ed2eb6423c74e89b787887309cfb043c97d502579606"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "MezzanineVault.redeem(uint256,address,address) (contracts/MezzanineVault.sol#56-59) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp > reinvestUntil || ! principalLocked,reinvest lock) (contracts/MezzanineVault.sol#57)\n",
            "markdown": "[MezzanineVault.redeem(uint256,address,address)](contracts/MezzanineVault.sol#L56-L59) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(block.timestamp > reinvestUntil || ! principalLocked,reinvest lock)](contracts/MezzanineVault.sol#L57)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/MezzanineVault.sol"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 59
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fd68b2a5f92b29044f0c00246ff590e3fb43747baeb02857d20c688280be965c"
          }
        }
      ]
    }
  ]
}