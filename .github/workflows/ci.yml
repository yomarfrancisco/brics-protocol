name: ci

on:
  push:
    branches: [ main, release/** ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: "20"
  SOLC_VERSION: "0.8.24"

jobs:
  tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Hardhat & node_modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            artifacts
            cache
          key: ${{ runner.os }}-node${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}-tests

      - run: npm ci
      - run: npm test

      # Artifacts (tests don't always have files, but keep a pattern)
      - name: Upload gas report (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gas-report_${{ github.sha }}
          path: gas-report.txt
          retention-days: 14

  coverage-fast:
    name: Coverage (fast track)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      COVERAGE: "1"
      NODE_OPTIONS: --max_old_space_size=4096
    steps:
      - uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Hardhat & node_modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            artifacts
            cache
          key: ${{ runner.os }}-node${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}-coverage-fast

      - run: npm ci
      - run: npm run coverage

      - name: Enforce coverage floor
        run: |
          FAST_FLOOR=$(node -pe "require('./ci/coverage-baseline.json').fast_floor")
          bash scripts/check-coverage.sh "$FAST_FLOOR"

      - name: Upload coverage summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-fast_${{ github.event_name }}_${{ github.sha }}
          path: |
            coverage/lcov.info
            coverage.json
          retention-days: 14

      - name: Post PR Comment (coverage + gas)
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx ts-node scripts/pr-comment.ts || echo "PR comment skipped"

  gas-report:
    name: Gas Report
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Hardhat & node_modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            artifacts
            cache
          key: ${{ runner.os }}-node${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}-gas

      - run: npm ci
      - run: npm run gas

      - name: Upload gas report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gas-report_${{ github.event_name }}_${{ github.sha }}
          path: gas-report.txt
          retention-days: 14

  slither-security:
    name: Security (Slither + SARIF)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      SOLC_VERSION: "0.8.24"
    steps:
      - uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Slither & solc-select
        run: |
          pip install "slither-analyzer==0.10.3" solc-select
          solc-select install ${SOLC_VERSION}
          solc-select use ${SOLC_VERSION}

      - name: Run Slither (markdown + sarif)
        run: |
          mkdir -p audit
          slither . --solc-remaps "@=node_modules/" --markdown audit/slither-report.md || true
          slither . --solc-remaps "@=node_modules/" --sarif slither.sarif || true

      - name: Fail on High severity
        run: |
          if grep -Ei '"level"\s*:\s*"error"|"\bhigh\b"|SEVERITY_HIGH' slither.sarif > /dev/null; then
            echo "High severity findings present"; exit 1;
          fi

      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: slither.sarif

      - name: Upload slither artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: slither_${{ github.event_name }}_${{ github.sha }}
          path: |
            audit/slither-report.md
            slither.sarif
          retention-days: 14
